name: Deploy AWS Glue Job

on:
  push:
    branches:
      - main  # Runs the pipeline when code is pushed to 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS Credentials (Set up AWS_ACCESS_KEY_ID & AWS_SECRET_ACCESS_KEY in GitHub Secrets)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 3️⃣ Upload Glue Script to S3
      - name: Upload Glue Script to S3
        run: |
          aws s3 cp glue_etl.py s3://ag-my-data-lake-etl-bucket/glue-scripts/

    #   # 4️⃣ Start AWS Glue Job
    #   - name: Start AWS Glue Job
    #     run: |
    #       JOB_RUN_ID=$(aws glue start-job-run --job-name glue-etl-job --query 'JobRunId' --output text)
    #       echo "GLUE_JOB_RUN_ID=$JOB_RUN_ID" >> $GITHUB_ENV

    #   # 5️⃣ Notify on Failure
    #   - name: Notify on Failure
    #     if: failure()
    #     run: echo "AWS Glue job execution failed!"

    #   # 8️⃣ Fetch AWS Glue Job Logs from CloudWatch
    #   - name: Fetch Glue Logs
    #   run: |
    #     sleep 30  # Wait for logs to be available
    #     LOG_GROUP_NAME="/aws-glue/jobs/glue-etl-job"
    #     aws logs filter-log-events --log-group-name $LOG_GROUP_NAME --limit 10
